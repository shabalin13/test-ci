name: CI

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  quality-check:
    name: Build, Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set Gradle permissions
        run: chmod +x ./gradlew

#      - name: Run Detekt
#        run: ./gradlew detekt --continue

#      - name: Publish Detekt reports
#        uses: Juuxel/publish-checkstyle-report@v2
#        if: ${{ failure() || success() }}
#        with:
#          reports: |
#            **/build/reports/detekt/detekt.xml

#      - name: Report CheckStyle Results
#        if: always()
#        uses: motlin/checkstyle-results@v1
#        with:
#          checkstyle_files: "**/build/reports/detekt/detekt.xml"

#      - name: Publish Detekt Report
#        if: failure()
#        uses: IliaSuponeff/detekt-pr-reporter-action@v1.0.4
#        with:
#          report_path: app/build/reports/detekt/detekt.md
#          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: detekt
#        uses: alaegin/Detekt-Action@v1.19
#        with:
#          github_token: ${{ secrets.github_token }}
#          reviewdog_reporter: github-pr-review
#          detekt_config: config/detekt/detekt.yml

      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Run reviewdog on all Detekt reports
        run: |
          find . -type f -path "*/build/reports/detekt/detekt.xml" | while read file; do
            echo "Reviewdog for $file"
            reviewdog -f=checkstyle \
              -name="detekt (${file})" \
              -reporter=github-pr-review \
              -level=warning \
              < "$file"
          done
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          #      - name: Collect Detekt Reports
#        if: always()
#        run: |
#          mkdir -p detekt-reports
#
#          find . -type f -path "*/build/reports/detekt/detekt.html" | while read file; do
#            module_path=$(dirname "$file" | sed -E 's|^\./(.*)/build/reports/detekt$|\1|')
#            module_name=$(echo "$module_path" | tr '/' '-')
#
#            cp "$file" "detekt-reports/${module_name}-detekt.html"
#          done
#
#      - name: Upload Detekt Reports
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: detekt-reports
#          path: detekt-reports
#          if-no-files-found: warn

      - name: Run Unit Tests
        run: ./gradlew test --continue

#      - name: Report Detekt results with ReviewDog
#        if: always()
#        uses: reviewdog/action-checkstyle@v1
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          reporter: github-pr-review
#          level: warning
#          fail_on_error: false
#          filter_mode: diff_context
#          checkstyle_input: |
#            $(find . -type f -path "*/build/reports/detekt/detekt.xml" | paste -sd " ")

#      - name: Collect Unit Test Reports
#        if: always()
#        run: |
#          mkdir -p unit-test-reports
#
#          find . -type d -path "*/build/test-results/test*/" | while read dir; do
#            module_path=$(echo "$dir" | sed -E 's|^\./(.*)/build/test-results/test.*|\1|')
#            module_name=$(echo "$module_path" | tr '/' '-')
#
#            cp -r "$dir" "unit-test-reports/${module_name}-test-results"
#          done
#
#      - name: Upload Unit Test Reports
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit-test-reports
#          path: unit-test-reports
#          if-no-files-found: warn
